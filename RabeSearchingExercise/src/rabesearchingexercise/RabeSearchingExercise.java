/*
 * Owen Rabe
 * Apr 26 23
 * program to search file for book by refrence number
 */
package rabesearchingexercise;

import java.io.File;
import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author owenrabe
 */
public class RabeSearchingExercise extends javax.swing.JFrame {

    ArrayList<Book> books = new ArrayList();
    int numBooks,linCount,binCount;
    String wantedNameBin,wantedNameLin;
    public RabeSearchingExercise() {
        initComponents();
        loadArray();
        System.out.println(books);
    }
    /**
     * Method to load the array with book objects based on the given data file.
     */
    private void loadArray(){
        try {
            File f = new File("src/rabesearchingexercise/BookList.txt");
            Scanner s = new Scanner(f);
            while(s.hasNextLine()){
                Book b = new Book(Integer.parseInt(s.nextLine()),s.nextLine());
                books.add(b);
            }
            
        } catch (Exception e) {
        }
        //getting the number of books in the list
        numBooks = books.size();
    }
    /**
     * method to perform a linear search to find the book
     * @param rNum the refreence number of the wanted book
     * @return if the book was found or not
     */
    public boolean linSearch(int rNum){
        //loop while there are still books to check
        for (int i = 0; i < numBooks; i++) {
            linCount++;
            //if the checked book matches the wanted rnum
            if((books.get(i)).getRef()==rNum){
                wantedNameLin = books.get(i).getName();
                return true;
            }
            
        }
        return false;
    }
    /**
     * Method to perform a binary search to find the book
     * @param left the smallest value to check 
     * @param right the rightmost(biggest) number to check 
     * @param wanted the rnum that the user wants
     * @return if the book was found
     */
    public boolean binSearch(int left,int right, int wanted){
    int middle;
    binCount++;
    //if there are no more books to search
    if(left > right){
        return false;
    }
    //find the midground between the leftmost and rightmost possible
    middle = (left + right)/2;
    //if the middle book has the requested rnum
    if(books.get(middle).getRef() == wanted){
        wantedNameBin = books.get(middle).getName();
        return true;
    }
    //check to see if the wanted rnum is greater or less than the one we just checked, eliminate half accordingly
    if(books.get(middle).getRef() > wanted){
        return binSearch(left,middle -1,wanted);
    }
    else{
        return binSearch(middle+1,right,wanted);
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        wantedField = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        binField = new javax.swing.JTextField();
        linField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Children's Classics");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jLabel2.setText("This program will find the title of a book based on it's reference number");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jLabel3.setText("Enter the reference number:");

        wantedField.setBackground(new java.awt.Color(255, 255, 255));
        wantedField.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N

        btnSearch.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        btnSearch.setText("Find it!");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jLabel4.setText("Binary Search:");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        jLabel5.setText("Linear Search:");

        binField.setBackground(new java.awt.Color(255, 255, 255));
        binField.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N

        linField.setBackground(new java.awt.Color(255, 255, 255));
        linField.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSearch)
                            .addComponent(wantedField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(binField))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(20, 20, 20)
                        .addComponent(linField, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(138, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(wantedField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSearch)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(linField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(binField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * listener for when the button is hit
 * @param evt 
 */
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        //taking the number the user wants from the field
        int wanted = Integer.parseInt(wantedField.getText());
        //setting counts to 0
        binCount = 0;
        linCount = 0;
        //running the searches, if one works run the other and update txt fields
        if(linSearch(wanted)){
            binSearch(0,numBooks-1,wanted);
            binField.setText("Found: " + wantedNameBin + ". " + binCount + " books processed.");
            linField.setText("Found: " + wantedNameLin + ". " + linCount + " books processed.");
        }
        //otherwise update text fields and say neither worked
        else{
            binField.setText("Book #" + wanted + " not found.");
            linField.setText("Book #" + wanted + " not found.");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RabeSearchingExercise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RabeSearchingExercise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RabeSearchingExercise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RabeSearchingExercise.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RabeSearchingExercise().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField binField;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField linField;
    private javax.swing.JTextField wantedField;
    // End of variables declaration//GEN-END:variables
}
